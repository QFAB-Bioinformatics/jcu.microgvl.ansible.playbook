<tool id="fgs" name="FragGeneScan" version="0.1.0">
  <description>for finding Open Reading Frame</description>
  <!--<command interpreter="perl">run_FragGeneScan.pl -genome=$input -out=$output -complete=$type -train=$model</command>-->
  <command interpreter="bash">
  FragGeneScan_galaxy.sh $input $prefix $type $model $ffn $faa $out $gff $__tool_directory__ > $log
  </command>
  <inputs>
    <param format="fasta" name="input" type="data" label="Source file"/>
    <param name="type" type="select" display="radio" label="Select input type">
      <option value="0">0</option>
      <option value="1">1</option>
    </param>
     <param name="model" type="select" display="radio" label="Select sequencing error rate">
      <option value="sanger_5">sanger_5</option>
      <option value="sanger_10">sanger_10</option>
      <option value="454_5">454_5</option>
      <option value="454_10">454_10</option>
      <option value="454_30">454_30</option>
      <option value="Illumina_5">illumina_5</option>
      <option value="Illumina_10">illumina_10</option>
     </param>
  </inputs>
  <outputs>
    <!--<data format="fasta" name="output" from_work_dir="output" label="${tool.name}"/>-->
    
    <data format="fasta" name="prefix" label="${tool.name} prefix" hidden="True"/>
    <data format="fasta" name="ffn" label="${tool.name} on ${on_string} ffn"/>
    <data format="fasta" name="faa" label="${tool.name} on ${on_string} faa"/>
    <data format="txt" name="out" label="${tool.name} on ${on_string} out"/>
    <data format="gff" name="gff" label="${tool.name} on ${on_string} gff"/>
    <!--<data format="fasta" name="output" from_work_dir="/mnt/galaxy/files/001/${output}.ffn" label="${tool.name}"/>-->
    <data format="txt" name="log" label="${tool.name} on ${on_string} log"/>
  </outputs>

  <tests>
    <test>
      <param name="input" value="kraken.fasta"/>
      <param name="output" value="test"/>
      <param name="type" value="0"/>
      <param name="model" value="sanger_5"/>
      <output name="output" file="fa_gc_content_output.txt"/>
    </test>
  </tests>

  <help>
**What it does**

FragGeneScan_ is an application for finding genes in short reads.

.. _FragGeneScan: http://omics.informatics.indiana.edu/FragGeneScan/README

-----

**Input**
=========

- **Source file** - A FASTA file
- **Select input type** - 0 if the sequence file has short sequence reads; 1 if the sequence file has complete genomic sequences.
- **Select sequencing error rate** - Sequencing error rate from different sequencing platform.

Sequencing error rate type
--------------------------
- **complete** - for complete genomic sequences or short sequence reads without sequencing error
- **sanger_5** - for Sanger sequencing reads with about 0.5% error rate
- **sanger_10** - for Sanger sequencing reads with about 1% error rate
- **454_10** - for 454 pyrosequencing reads with about 1% error rate
- **454_30** - for 454 pyrosequencing reads with about 3% error rate
- **illumina_5** - for Illumina sequencing reads with about 0.5% error rate
- **illumina_10** - for Illumina sequencing reads with about 1% error rate

-----

Citation
=========
If you use FragGeneScan, please cite:
Mina Rho, Haixu Tang, and Yuzhen Ye. FragGeneScan: Predicting Genes in Short and Error-prone Reads. Nucl. Acids Res., 2010 doi: 10.1093/nar/gkq747

License
=======
Copyright (C) 2010 Mina Rho, Yuzhen Ye and Haixu Tang.
You may redistribute this software under the terms of the GNU General Public License.



  </help>

</tool>
