---
  
  #Firstly, create the bootstrap user for irida and return its outpur
  - name: Create the bootstrap user
    command: chdir="{{ galaxy_server_dir }}" .venv/bin/python scripts/api/manage_bootstrap_user.py -c "{{ galaxy_config_file }}" create -u "{{ tools_admin_username }}" -e "{{ tools_admin_email }}" -p "{{ tools_admin_password }}"
    register: api_key
    become: yes
    become_user: galaxy
    
  - debug: var=api_key
  
  #set the api key for ansible playbook to the one that was returned
  - set_fact: galaxy_tools_api_key="{{ api_key.stdout_lines[0] }}" 
  
  
  #Add the admin user to galaxy.ini (check to see if the admin users line already exists)
  - name: Check/Set bootstrap user as Galaxy Admin if admin_users tag is already in the config file
    replace: dest={{ galaxy_config_file }} regexp="^[ ]*admin_users[ ]*=[ ]*" replace="admin_users = {{ tools_admin_email }},"  #"
    register: admin_users_found
    become: yes
    become_user: galaxy

  - name: Set bootstrap user as Galaxy Admin
    lineinfile: dest={{ galaxy_config_file }} state=present insertafter="app:main" line="admin_users = {{ tools_admin_email }}"  #"
    when: admin_users_found.msg == ""
    become: yes
    become_user: galaxy
    
  #Copy the multiple tool install_tools script over
  - name: Copy install_tool_shed_tools.py to galaxy_app
    copy: src="install_tool_shed_tools.py" dest="{{ galaxy_server_dir }}/install_tool_shed_tools.py" owner=galaxy group=users
    become: yes
    become_user: galaxy
    
  #Copy the tool list to galaxy_server_dir
  - name: Copy the tool list to galaxy_server_dir
    copy: src="tool_list.yml" dest="{{ galaxy_server_dir }}/tool_list.yml" owner=galaxy group=users
    become: yes
    become_user: galaxy

  #Copy the integrated_tool_panel.xml to galaxy_server_dir
  - name: Copy the tool list to galaxy_server_dir
    copy: src="integrated_tool_panel.xml" dest="{{ galaxy_server_var }}/integrated_tool_panel.xml" owner=galaxy group=users
    become: yes
    become_user: galaxy

  #Copy the integrated_tool_panel.xml to galaxy_server_dir
  - name: Copy the tool list to galaxy_server_dir
    copy: src="shed_tool_conf_cloud.xml" dest="{{ galaxy_server_dir }}/config/shed_tool_conf_cloud.xml" owner=galaxy group=users
    become: yes
    become_user: galaxy

  - name: Install biom-format using pip
    pip: name=biom-format version=2.1.5 state=present
    become: yes
    become_user: root
    
  
  #Create a symlink for SamToFastq.jar in bam_to_fastq directory
  - name: Create a symlink for SamToFastq.jar
    file: src="{{ galaxy_server_tools_picard_dir }}/SamToFastq.jar" dest="{{ galaxy_server_bam_to_fastq_dir }}/SamToFastq.jar" state=link owner=galaxy group=users mode=0755
    become: yes
    become_user: galaxy

  #Create history directory if it doesn't exist
  #- name: Create history directory in galaxy_server_dir (/mnt/galaxy/galaxy-apps/tools/)
  #  file: path="{{ galaxy_server_dir }}/tools/history" state=directory owner=galaxy group=users mode=0755
  #  become: yes
  # become_user: galaxy

  #Copy historyRetrieval.py and historyRetrieval.xml to the /mnt/galaxy/galaxy-apps/tools/history
  #- name: Copy history script to galaxy_server_dir
  #  copy: src={{ item.src }} dest={{ item.dest }} owner=galaxy group=users
  #  with_items:
  #    - { src: 'historyRetrieval.py', dest: '{{ galaxy_server_dir }}/tools/history/historyRetrieval.py' }
  #    - { src: 'historyRetrieval.xml', dest: '{{ galaxy_server_dir }}/tools/history/historyRetrieval.xml' }
  #  become: yes
  #  become_user: galaxy

#Create Symmetric plot  directory if it doesn't exist
  - name: Create Phyloseq directory in galaxy_server_dir (/mnt/galaxy/galaxy-apps/tools/)
    file: path="{{ galaxy_server_dir }}/tools/symmetricPlot" state=directory owner=galaxy group=users mode=0755
    become: yes
    become_user: galaxy


  #Copy historyRetrieval.py and historyRetrieval.xml to the /mnt/galaxy/galaxy-apps/tools/history
  - name: Copy history script to galaxy_server_dir
    copy: src={{ item.src }} dest={{ item.dest }} owner=galaxy group=users
    with_items:
      - { src: 'symmetric_plot.r', dest: '{{ galaxy_server_dir }}/tools/symmetricPlot/symmetric_plot.r' }
      - { src: 'symmetric_plot.xml', dest: '{{ galaxy_server_dir }}/tools/symmetricPlot/symmetric_plot.xml' }
      - { src: 'symmetric_plot_2.r', dest: '{{ galaxy_server_dir }}/tools/symmetricPlot/symmetric_plot_2.r' }
      - { src: 'symmetric_plot_2.xml', dest: '{{ galaxy_server_dir }}/tools/symmetricPlot/symmetric_plot_2.xml' }
    become: yes
    become_user: galaxy

  #Create Phyloseq directory if it doesn't exist
  - name: Create Phyloseq directory in galaxy_server_dir (/mnt/galaxy/galaxy-apps/tools/)
    file: path="{{ galaxy_server_dir }}/tools/phyloseq" state=directory owner=galaxy group=users mode=0755
    become: yes
    become_user: galaxy

  #Copy phyloseq.r and phyloseq.xml to the /mnt/galaxy/galaxy-apps/tools/phyloseq
  - name: Copy phyloseq script to galaxy_server_dir
    copy: src={{ item.src }} dest={{ item.dest }} owner=galaxy group=users
    with_items:
      #- { src: 'phyloseq.r', dest: '{{ galaxy_server_dir }}/tools/phyloseq/phyloseq.r' }
      #- { src: 'phyloseq.xml', dest: '{{ galaxy_server_dir }}/tools/phyloseq/phyloseq.xml' }
      - { src: 'phyloseq_richness.r', dest: '{{ galaxy_server_dir }}/tools/phyloseq/phyloseq_richness.r' }
      - { src: 'phyloseq_richness.xml', dest: '{{ galaxy_server_dir }}/tools/phyloseq/phyloseq_richness.xml' }
      - { src: 'phyloseq_abundance_factor.r', dest: '{{ galaxy_server_dir }}/tools/phyloseq/phyloseq_abundance_factor.r' }
      - { src: 'phyloseq_abundance_factor.xml', dest: '{{ galaxy_server_dir }}/tools/phyloseq/phyloseq_abundance_factor.xml' }
      - { src: 'phyloseq_abundance_kingdom.r', dest: '{{ galaxy_server_dir }}/tools/phyloseq/phyloseq_abundance_kingdom.r' }
      - { src: 'phyloseq_abundance_kingdom.xml', dest: '{{ galaxy_server_dir }}/tools/phyloseq/phyloseq_abundance_kingdom.xml' }
      - { src: 'phyloseq_net.r', dest: '{{ galaxy_server_dir }}/tools/phyloseq/phyloseq_net.r' }
      - { src: 'phyloseq_net.xml', dest: '{{ galaxy_server_dir }}/tools/phyloseq/phyloseq_net.xml' }
    become: yes
    become_user: galaxy
    
  #Create DESeq2 directory if it doesn't exist
  - name: Create Phyloseq directory in galaxy_server_dir (/mnt/galaxy/galaxy-apps/tools/)
    file: path="{{ galaxy_server_dir }}/tools/otuDESeq2" state=directory owner=galaxy group=users mode=0755
    become: yes
    become_user: galaxy
    
  - name: Copy phyloseq_2_deseq2 script to galaxy_server_dir
    copy: src={{ item.src }} dest={{ item.dest }} owner=galaxy group=users
    with_items:
      - { src: 'phyloseq_2_deseq2.r', dest: '{{ galaxy_server_dir }}/tools/otuDESeq2/phyloseq_2_deseq2.r' }
      - { src: 'phyloseq_2_deseq2.xml', dest: '{{ galaxy_server_dir }}/tools/otuDESeq2/phyloseq_2_deseq2.xml' }
    become: yes
    become_user: galaxy

  #Create Reheader directory if it doesn't exist
  - name: Create Reheader directory in galaxy_server_dir (/mnt/galaxy/galaxy-apps/tools/)
    file: path="{{ galaxy_server_dir }}/tools/reheader" state=directory owner=galaxy group=users mode=0755
    become: yes
    become_user: galaxy

  #Copy reheader.py and reheader.xml to the /mnt/galaxy/galaxy-apps/tools/reheader
  - name: Copy reheader script to galaxy_server_dir
    copy: src={{ item.src }} dest={{ item.dest }} owner=galaxy group=users
    with_items:
      - { src: 'reheader.py', dest: '{{ galaxy_server_dir }}/tools/reheader/reheader.py' }
      - { src: 'reheader.xml', dest: '{{ galaxy_server_dir }}/tools/reheader/reheader.xml' }
    become: yes
    become_user: galaxy

  #Create validate metadata directory if it doesn't exist
  - name: Create validate metadata directory in galaxy_server_dir (/mnt/galaxy/galaxy-apps/tools/)
    file: path="{{ galaxy_server_dir }}/tools/validateMeta" state=directory owner=galaxy group=users mode=0755
    become: yes
    become_user: galaxy

  #Copy validateMeta.py and validateMeta.xml to the /mnt/galaxy/galaxy-apps/tools/validateMeta
  - name: Copy validateMeta script to galaxy_server_dir
    copy: src={{ item.src }} dest={{ item.dest }} owner=galaxy group=users
    with_items:
      - { src: 'validateMeta.py', dest: '{{ galaxy_server_dir }}/tools/validateMeta/validateMeta.py' }
      - { src: 'validateMeta.xml', dest: '{{ galaxy_server_dir }}/tools/validateMeta/validateMeta.xml' }
    become: yes
    become_user: galaxy

  #Create UCLUST to OTU Table directory if it doesn't exist
  - name: Create UCLUST to OTU Table directory in galaxy_server_dir (/mnt/galaxy/galaxy-apps/tools/)
    file: path="{{ galaxy_server_dir }}/tools/uc2otutable" state=directory owner=galaxy group=users mode=0755
    become: yes
    become_user: galaxy

  #Copy uc2otutable.py and uc2otutable.xml to the /mnt/galaxy/galaxy-apps/tools/uc2otutable
  - name: Copy OTU table script to /mnt/galaxy/galaxy-apps/tools/uc2otutable
    copy: src={{ item.src }} dest={{ item.dest }} owner=galaxy group=users
    with_items:
      - { src: 'uc2otutab_mod.py', dest: '{{ galaxy_server_dir }}/tools/uc2otutable/uc2otutab_mod.py' }
      - { src: 'uc2otutab_mod.xml', dest: '{{ galaxy_server_dir }}/tools/uc2otutable/uc2otutab_mod.xml' }
      - { src: 'python_scripts.tar.gz', dest: '{{ galaxy_server_dir }}/tools/uc2otutable/python_scripts.tar.gz' }
    become: yes
    become_user: galaxy
    
  # unarchive a python script from Drive5
  - name: Extract archive
    unarchive: src="{{ galaxy_server_dir }}/tools/uc2otutable/python_scripts.tar.gz" dest="{{ galaxy_server_dir }}/tools/uc2otutable/" owner=galaxy group=users mode=0755
    become: yes
    become_user: galaxy
    
  #Copy the tool list to galaxy_server_dir
  - name: Copy the tool list to galaxy_server_dir
    copy: src="uc.py" dest="{{ galaxy_server_dir }}/tools/uc2otutable/" owner=galaxy group=users
    become: yes
    become_user: galaxy
    
  #Create FragGeneScan directory if it doesn't exist
  - name: Create FragGeneScane directory in galaxy_server_dir (/mnt/galaxy/galaxy-apps/tools/)
    file: path="{{ galaxy_server_dir }}/tools/fragGeneScan" state=directory owner=galaxy group=users mode=0755
    become: yes
    become_user: galaxy

  #Copy FragGeneScan_galaxy.sh and uc2otutable.xml to the /mnt/galaxy/galaxy-apps/tools/fragGeneScane
  - name: Copy FragGeneScan wrapper script to /mnt/galaxy/galaxy-apps/tools/fragGeneScan
    copy: src={{ item.src }} dest={{ item.dest }} owner=galaxy group=users
    with_items:
      - { src: 'FragGeneScan_galaxy.sh', dest: '{{ galaxy_server_dir }}/tools/fragGeneScan/FragGeneScan_galaxy.sh' }
      - { src: 'run_FragGeneScan.xml', dest: '{{ galaxy_server_dir }}/tools/fragGeneScan/run_FragGeneScan.xml' }
      - { src: 'FragGeneScan1.18.tar.gz', dest: '{{ galaxy_server_dir }}/tools/fragGeneScan/FragGeneScan1.18.tar.gz' }
    become: yes
    become_user: galaxy
    
  # unarchive a FragGeneScan File
  - name: Extract archive FragGeneScan
    unarchive: src="{{ galaxy_server_dir }}/tools/fragGeneScan/FragGeneScan1.18.tar.gz" dest="{{ galaxy_server_dir }}/tools/fragGeneScan/" owner=galaxy group=users mode=0755
    become: yes
    become_user: galaxy

  - name: modify shed_tool_conf_cloud.xml
    lineinfile: dest="{{ galaxy_server_dir }}/config/shed_tool_conf_cloud.xml" insertbefore="^<section id=\"getext\" name=\"Get Data\" version=\"\">" line="{{ item }}" state=present
    with_items:
      - "<label id=\"jcu_tools\" text=\"James Cook Univeristy Tools\" />"
      - "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"tools\" name=\"Tools: Data Processing\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"tools\" name=\"Tools: OTUTable\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"tools\" name=\"Tools: Rename Sequence Header\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"tools\" name=\"Tools: ValidateMeta\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"meta_biom\" name=\"META: BIOM\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
#      - "<section id=\"meta_cdhit\" name=\"META: CDHIT\">"
#      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
#      - "<section id=\"meta_cutadapt\" name=\"META: TRIMMING\">"
#      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"meta_kraken\" name=\"META: KRAKEN\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"meta_mothur\" name=\"META: MOTHUR\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"meta_pear\" name=\"META: PEAR\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"meta_phyloseq\" name=\"META: PHYLOSEQ\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"meta_vsearch\" name=\"META: VSEARCH\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    become: yes
    become_user: galaxy
  
  #insert the jcu tool section
  #- name: Insert the jcu tool collection menu into the integrated_tool_panel.xml
  #  lineinfile: dest="{{ galaxy_server_var }}/integrated_tool_panel.xml" insertbefore="^</toolbox>" line="{{ item }}" state=present
  #  with_items:
  #    - "<label id=\"jcu_tools\" text=\"James Cook Univeristy Tools\" />"
  #    - "<section id=\"otu_biom\" name=\"OTU: BIOM\" version=\"\">"
  #    - "</section>"
  #  become: yes
  #  become_user: galaxy

  #restart Galaxy
  - name: stop Galaxy
    shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --stop-daemon"
    become: yes
    become_user: galaxy
    
  - name: Wait for Galaxy to stop
    wait_for: port=8080 delay=5 state=stopped timeout=300
  
  - name: Start Galaxy
    shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --daemon"
    become: yes
    become_user: galaxy
    
  - name: Wait for Galaxy to start
    wait_for: port=8080 delay=5 state=started timeout=600
    
  #Install the tools!
  - name: Install the toolshed tools!
    command: chdir="{{ galaxy_server_dir }}" .venv/bin/python install_tool_shed_tools.py -g "{{ galaxy_tools_galaxy_instance_url }}" -a "{{ galaxy_tools_api_key }}" -t tool_list.yml
    become: yes
    become_user: galaxy
    ignore_errors: true
    
  - name: Gets InterProScan5 tarball
    get_url:
      url="ftp://ftp.ebi.ac.uk/pub/software/unix/iprscan/5/5.24-63.0/interproscan-5.24-63.0-64-bit.tar.gz"
      dest="{{ InterProScan5_path}}/interproscan5/"
    register: new_archive
    become:yes
    become_user: galaxy
  
  - name: Extract archive FragGeneScan
    unarchive: src="{{ InterProScan5_path}}/interproscan5/interproscan-5.24-63.0-64-bit.tar.gz" dest="{{ InterProScan5_path}}/interproscan5/" owner=galaxy group=users mode=0755
    become: yes
    become_user: galaxy
    
  #Copy the kraken_databases.loc file to /mnt/galaxyIndices/tool-data/dm/toolshed.g2.bx.psu.edu/repos
  - name: Copy the kraken_databases.loc file to kraken repos diretory
    copy: src="kraken_databases.loc" dest="{{ kraken_db_config_path }}/kraken_databases.loc" owner=galaxy group=users
    become: yes
    become_user: galaxy

  #Copy the kraken_mpa_report.xml file to /mnt/galaxy/shed_tools/toolshed.g2.bx.psu.edu/repos
  - name: Copy the kraken_mpa_report.xml file to kraken toolshed directory
    copy: src="kraken-mpa-report.xml" dest="{{ kraken_mpa_report_path }}/kraken_report/kraken-mpa-report.xml" owner=galaxy group=users
    become: yes
    become_user: galaxy

  #Copy the ncbi_taxonomy.loc file to /mnt/galaxyIndices/tool-data/dm/toolshed.g2.bx.psu.edu/repos
  - name: Copy the ncbi_taxonomy.loc file to kraken repos diretory
    copy: src="ncbi_taxonomy.loc" dest="{{ kraken_db_for_tax_path }}/ncbi_taxonomy.loc" owner=galaxy group=users
    become: yes
    become_user: galaxy

  #Copy the tool_data_table_conf.xml file to /mnt/galaxyIndices/tool-data/dm/toolshed.g2.bx.psu.edu/repos
  - name: Copy the tool_data_table.conf.xml file to kraken repos diretory
    copy: src="tool_data_table_conf.xml" dest="{{ kraken_db_config_path }}/tool_data_table_conf.xml" owner=galaxy group=users
    become: yes
    become_user: galaxy

  #- name: modify tool_conf.xml
  #  lineinfile: dest="{{ galaxy_server_dir }}/config/tool_conf.xml" insertbefore="^</toolbox>" line="{{ item }}" state=present
  #  with_items:
  #    - "  <section id=\"tools\" name=\"Tools: \">"
  #    - "    <tool file=\"history/historyRetrieval.xml\" />"
  #    - "  </section>\n"
  #  become: yes
  #  become_user: galaxy

  - name: modify tool_conf.xml
    lineinfile: dest="{{ galaxy_server_dir }}/config/tool_conf.xml" insertbefore="^</toolbox>" line="{{ item }}" state=present
    with_items:
      - "  <section id=\"tools\" name=\"Tools: Create OTU Table\">"
      - "    <tool file=\"uc2otutable/uc2otutab_mod.xml\" />"
      - "    <tool file=\"fragGeneScan/run_FragGeneScan.xml\" />"
      - "  </section>\n"
    become: yes
    become_user: galaxy

  - name: modify tool_conf.xml
    lineinfile: dest="{{ galaxy_server_dir }}/config/tool_conf.xml" insertbefore="^</toolbox>" line="{{ item }}" state=present
    with_items:
      - "  <section id=\"meta_phyloseq\" name=\"META: Phyloseq\">"
      - "    <tool file=\"phyloseq/phyloseq_richness.xml\" />"
      - "    <tool file=\"phyloseq/phyloseq_abundance_factor.xml\" />"
      - "    <tool file=\"phyloseq/phyloseq_abundance_kingdom.xml\" />"
      - "    <tool file=\"symmetricPlot/symmetric_plot.xml\" />"
      - "    <tool file=\"symmetricPlot/symmetric_plot_2.xml\" />"
      - "    <tool file=\"phyloseq/phyloseq_net.xml\" />"
      - "    <tool file=\"otuDESeq2/phyloseq_2_deseq2.xml\" />"
      - "  </section>\n"
    become: yes
    become_user: galaxy

  - name: modify tool_conf.xml
    lineinfile: dest="{{ galaxy_server_dir }}/config/tool_conf.xml" insertbefore="^</toolbox>" line="{{ item }}" state=present
    with_items:
      - "  <section id=\"tools\" name=\"Tools: Rename Sequence Header\">"
      - "    <tool file=\"reheader/reheader.xml\" />"
      - "  </section>\n"
    become: yes
    become_user: galaxy

  - name: modify tool_conf.xml
    lineinfile: dest="{{ galaxy_server_dir }}/config/tool_conf.xml" insertbefore="^</toolbox>" line="{{ item }}" state=present
    with_items:
      - "  <section id=\"tools\" name=\"Tools: Validate Metadata\">"
      - "    <tool file=\"validateMeta/validateMeta.xml\" />"
      - "  </section>\n"
    become: yes
    become_user: galaxy

  #Now de admin the user..
  #- name: De-admin the irida user
  #  replace: dest="{{ galaxy_config_file }}" regexp="{{ tools_admin_email}}[,]?" replace=""
  #  become: yes
  #  become_user: galaxy
    
  #restart Galaxy
  - name: stop Galaxy
    shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --stop-daemon"
    become: yes
    become_user: galaxy
    
  - name: Wait for Galaxy to stop
    wait_for: port=8080 delay=5 state=stopped timeout=300
  
  - name: Start Galaxy
    shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --daemon"
    become: yes
    become_user: galaxy
    
  - name: Wait for Galaxy to start
    wait_for: port=8080 delay=5 state=started timeout=600
