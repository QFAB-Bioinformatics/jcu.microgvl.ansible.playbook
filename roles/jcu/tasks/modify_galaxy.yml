---
  
  #Firstly, create the bootstrap user for irida and return its outpur
  - name: Create the bootstrap user
    command: chdir="{{ galaxy_server_dir }}" .venv/bin/python scripts/api/manage_bootstrap_user.py -c "{{ galaxy_config_file }}" create -u "{{ tools_admin_username }}" -e "{{ tools_admin_email }}" -p "{{ tools_admin_password }}"
    register: api_key
    become: yes
    become_user: galaxy
    
  - debug: var=api_key
  
  #set the api key for ansible playbook to the one that was returned
  - set_fact: galaxy_tools_api_key="{{ api_key.stdout_lines[0] }}" 
  
  
  #Add the admin user to galaxy.ini (check to see if the admin users line already exists)
  - name: Check/Set bootstrap user as Galaxy Admin if admin_users tag is already in the config file
    replace: dest={{ galaxy_config_file }} regexp="^[ ]*admin_users[ ]*=[ ]*" replace="admin_users = {{ tools_admin_email }},"  #"
    register: admin_users_found
    become: yes
    become_user: galaxy

  - name: Set bootstrap user as Galaxy Admin
    lineinfile: dest={{ galaxy_config_file }} state=present insertafter="app:main" line="admin_users = {{ tools_admin_email }}"  #"
    when: admin_users_found.msg == ""
    become: yes
    become_user: galaxy
    
  #Copy the multiple tool install_tools script over
  - name: Copy install_tool_shed_tools.py to galaxy_app
    copy: src="install_tool_shed_tools.py" dest="{{ galaxy_server_dir }}/install_tool_shed_tools.py" owner=galaxy group=users
    become: yes
    become_user: galaxy
    
  #Copy the tool list to galaxy_server_dir
  - name: Copy the tool list to galaxy_server_dir
    copy: src="tool_list.yml" dest="{{ galaxy_server_dir }}/tool_list.yml" owner=galaxy group=users
    become: yes
    become_user: galaxy

  #Copy the integrated_tool_panel.xml to galaxy_server_dir
  - name: Copy the tool list to galaxy_server_dir
    copy: src="integrated_tool_panel.xml" dest="{{ galaxy_server_var }}/integrated_tool_panel.xml" owner=galaxy group=users
    become: yes
    become_user: galaxy

  #Copy the integrated_tool_panel.xml to galaxy_server_dir
  - name: Copy the tool list to galaxy_server_dir
    copy: src="shed_tool_conf_cloud.xml" dest="{{ galaxy_server_dir }}/config/shed_tool_conf_cloud.xml" owner=galaxy group=users
    become: yes
    become_user: galaxy
    
   #Create history directory if it doesn't exist
  - name: Create history directory in galaxy_server_dir (/mnt/galaxy/galaxy-apps/tools/)
    file: path="{{ galaxy_server_dir }}/tools/history" state=directory owner=galaxy group=users mode=0755
    become: yes
    become_user: galaxy

  #Copy historyRetrieval.py and historyRetrieval.xml to the /mnt/galaxy/galaxy-apps/tools/history
  - name: Copy the histor to galaxy_server_dir
    copy: src={{ item.src }} dest={{ item.dest }} owner=galaxy group=users
    with_items:
      - { src: 'historyRetrieval.py', dest: '{{ galaxy_server_dir }}/tools/history/historyRetrieval.py' }
      - { src: 'historyRetrieval.xml', dest: '{{ galaxy_server_dir }}/tools/history/historyRetrieval.xml' }
    become: yes
    become_user: galaxy

  - name: modify shed_tool_conf_cloud.xml
    lineinfile: dest="{{ galaxy_server_dir }}/config/shed_tool_conf_cloud.xml" insertbefore="^<section id=\"getext\" name=\"Get Data\" version=\"\">" line="{{ item }}" state=present
    with_items:
      - "<label id=\"jcu_tools\" text=\"James Cook Univeristy Tools\" />"
      - "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"tools\" name=\"Tools: History\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"otu_biom\" name=\"OTU: BIOM\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"otu_cdhit\" name=\"OTU: CDHIT\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
#      - "<section id=\"otu_cutadapt\" name=\"OTU: TRIMMING\">"
#      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"otu_kraken\" name=\"OTU: KMER\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"otu_mothur\" name=\"OTU: MOTHUR\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"otu_pear\" name=\"OTU: PEAR\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      - "<section id=\"otu_vsearch\" name=\"OTU: VSEARCH\">"
      - "  </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    become: yes
    become_user: galaxy
  
  #insert the jcu tool section
  #- name: Insert the jcu tool collection menu into the integrated_tool_panel.xml
  #  lineinfile: dest="{{ galaxy_server_var }}/integrated_tool_panel.xml" insertbefore="^</toolbox>" line="{{ item }}" state=present
  #  with_items:
  #    - "<label id=\"jcu_tools\" text=\"James Cook Univeristy Tools\" />"
  #    - "<section id=\"otu_biom\" name=\"OTU: BIOM\" version=\"\">"
  #    - "</section>"
  #  become: yes
  #  become_user: galaxy
  
  - name: modify tool_conf.xml
    lineinfile: dest="{{ galaxy_server_dir }}/config/tool_conf.xml" insertbefore="^</toolbox>" line="{{ item }}" state=present
    with_items:
      - "  <section id=\"tools\" name=\"Tools: History\">"
      - "    <tool file=\"history/historyRetrieval.xml\" />"
      - "  </section>\n"
    become: yes
    become_user: galaxy
    
  #restart Galaxy
  - name: stop Galaxy
    shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --stop-daemon"
    become: yes
    become_user: galaxy
    
  - name: Wait for Galaxy to stop
    wait_for: port=8080 delay=5 state=stopped timeout=300
  
  - name: Start Galaxy
    shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --daemon"
    become: yes
    become_user: galaxy
    
  - name: Wait for Galaxy to start
    wait_for: port=8080 delay=5 state=started timeout=600
    
  #Install the tools!
  - name: Install the toolshed tools!
    command: chdir="{{ galaxy_server_dir }}" .venv/bin/python install_tool_shed_tools.py -g "{{ galaxy_tools_galaxy_instance_url }}" -a "{{ galaxy_tools_api_key }}" -t tool_list.yml
    become: yes
    become_user: galaxy
    ignore_errors: true
    
  #Copy the kraken_databases.loc file to /mnt/galaxyIndices/tool-data/dm/toolshed.g2.bx.psu.edu/repos
  - name: Copy the kraken_databases.loc file to kraken repos diretory
    copy: src="kraken_databases.loc" dest="{{ kraken_db_config_path }}/kraken_databases.loc" owner=galaxy group=users
    become: yes
    become_user: galaxy

  #Copy the tool_data_table_conf.xml file to /mnt/galaxyIndices/tool-data/dm/toolshed.g2.bx.psu.edu/repos
  - name: Copy the tool_data_table.conf.xml file to kraken repos diretory
    copy: src="tool_data_table_conf.xml" dest="{{ kraken_db_config_path }}/tool_data_table_conf.xml" owner=galaxy group=users
    become: yes
    become_user: galaxy

  #Now de admin the irida user..
  #- name: De-admin the irida user
  #  replace: dest="{{ galaxy_config_file }}" regexp="{{ tools_admin_email}}[,]?" replace=""
  #  become: yes
  #  become_user: galaxy
    
  #restart Galaxy
  #- name: stop Galaxy
  #  shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --stop-daemon"
  #  become: yes
  #  become_user: galaxy
    
  #- name: Wait for Galaxy to stop
  #  wait_for: port=8080 delay=5 state=stopped timeout=300
  
  #- name: Start Galaxy
  #  shell: "{{ galaxy_server_dir }}/run.sh --pid-file=main.pid --log-file=main.log --daemon"
  #  become: yes
  #  become_user: galaxy
    
  #- name: Wait for Galaxy to start
  #  wait_for: port=8080 delay=5 state=started timeout=600
